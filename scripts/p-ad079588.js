const t = { triggerEvents: "click", exclude: "" }; function n(n, e, c, r = t) { const o = function (t) { if (t.exclude) try { return Array.from(document.querySelectorAll(t.exclude)) } catch (n) { console.warn(`@ClickOutside: Exclude: '${t.exclude}' will not be evaluated. Check your exclude selector syntax.`, n) } return [] }(r); (function (t) { return t.triggerEvents ? t.triggerEvents.split(",").map((t => t.trim())) : ["click"] })(r).forEach((t => { window.addEventListener(t, (t => { !function (t, n, e, c, r) { const o = t.target; e.contains(o) || function (t, n) { if (t && n) for (let e of n) if (e.contains(t)) return !0; return !1 }(o, r) || c.call(n) }(t, n, e, c, o) }), !1) })) } export { n as r }